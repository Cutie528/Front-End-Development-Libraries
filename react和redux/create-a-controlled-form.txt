创建一个可以控制的表单
MyForm 组件中是一个带有提交处理程序的空 form 元素， 提交处理程序将在提交表单时被调用。

我们增加了一个提交表单的按钮。 可以看到它的 type 被设置为 submit，表明它是控制表单提交的按钮。 在 form 中添加 input 元素，并像上个挑战一样设置其 value 和 onChange() 属性。 然后，应该完成 handleSubmit 方法，以便将组件 state 属性 submit 设置为本地 state 下的当前输入值。

注意： 还必须在提交处理程序中调用 event.preventDefault()，以防止将会刷新网页的默认的表单提交行为。 为了便于学员操作，默认行为在这里被禁用，以防止重置挑战的代码。

最后，在 form 元素之后创建一个 h1 标签，该标签从组件的 state 渲染 submit 的值。 然后，可以在表单中键入任何内容，然后单击按钮（或按 enter 键），输入会渲染到页面上。
** start of index.jsx **

class MyForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      input: '',
      submit: ''
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }
  handleChange(event) {
    this.setState({
      input: event.target.value
    });
  }
  handleSubmit(event) {
    // 修改这行下面的代码
      event.preventDefault()
      this.setState({
      submit: this.state.input
    })
    // 修改这行上面的代码
  }
  render() {
    return (
      <div>
        <form onSubmit={this.handleSubmit}>
          <input
            value={this.state.input}
            onChange={this.handleChange} />
          <button type='submit'>Submit!</button>
        </form>
        <h1>{this.state.submit}</h1>
      </div>
    );
  }
}

** end of index.jsx **

